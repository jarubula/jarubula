package com.vaahanmitra.dao;

import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import com.vaahanmitra.model.DriverBean;
import com.vaahanmitra.model.DriverEndUser;
import com.vaahanmitra.model.DriverFeedBack;
import com.vaahanmitra.model.InsertDriverPreRtsAndSal;
import com.vaahanmitra.model.OnDemandDriverRoutes;
import com.vaahanmitra.model.UserLogin;

public interface DriverDAO {

/*	public String insertLoginDetails(UserLogin bean);
	public String insertDriverDetails(DriverBean addDriver,InputStream inputStream,InputStream inputStream1);
	public ArrayList<DriverBean> displayDriver(String userId,String country);
	public ArrayList<DriverBean> displayHomePageDriverDetails(String state,String dist,String permitType,String range,String licenseType);
	public String InsertDPreferredRts(InsertDriverPreRtsAndSal driverRts);
	public String InsertExpctedSal(InsertDriverPreRtsAndSal driverSal);
	public String updateDriverSal(InsertDriverPreRtsAndSal driverSal);
	public ArrayList<DriverBean> getDriverDetails(String userId);
	public String updateDriver(DriverBean bean);
	public ArrayList<InsertDriverPreRtsAndSal> getDriverRoutes(String userId);
	public String updateDriverRoutes(String[] status,String userId);
	public String updateDriverProfile(DriverBean bean);
	public ArrayList<DriverBean> viewDriverProfile(String userId);
	public String updateDriverProfile1(DriverBean bean,InputStream inputStream);
	public String driverChangePassword(String psw1,String psw2,String psw3,String userId);
	public String updateDriverAvailability(String[] driverId, String userId);
	public boolean getEmail(String email);
	public String driverEmailVerification(String email);
	public String updateStatus(String email);
	public String InsertOnDemandDriverRoutes(OnDemandDriverRoutes driverRts);
	public String updateOnDemandDriverRoutes(String email,String status,String id);
	public ArrayList<OnDemandDriverRoutes> getOnDemandDriverRoutes(String userId);
	public Set<String> getOnDemandDriverLocation();
	public String driverJobType(String email);
	public ArrayList<DriverBean> displayHomePageDriverDetails(String state,String dist,String permitType,String range,String licenseType,int offset,int noOfRecords);
	public String driverEndUserVerification(String apptId);
	public List<DriverEndUser> getDriverEndUserById(String apptId);
	public List<DriverEndUser> getDriverEndUserDetails(String query);
	public List<String> getDriverByEmail(String email);
	public ArrayList searchHOnDemandDriver(String from,String to,String date,String time);
	public List<String> getLoginDetails(String email);
	public String insertDriverRating(String apptId,String rate);
	public String InsertDriverEndUser(DriverEndUser driverEndUser,UserLogin login);
	public String getIndividualOwnerEmail(String email);
	public List<String> getDriverRating(String email);
	public int getNoOfRecords();*/
	
	
	public String insertLoginDetails(UserLogin bean);
	public String insertDriverDetails(DriverBean addDriver,InputStream inputStream,InputStream inputStream1);
	public ArrayList<DriverBean> displayDriver(String userId,String country);
	public ArrayList<DriverBean> displayHomePageDriverDetails(String state,String dist,String permitType,String range,String licenseType,int offset,int noOfRecords);
	public String InsertDPreferredRts(InsertDriverPreRtsAndSal driverRts);
	public String InsertExpctedSal(InsertDriverPreRtsAndSal driverSal);
	public String updateDriverSal(InsertDriverPreRtsAndSal driverSal);
	public ArrayList<DriverBean> getDriverDetails(String userId);
	public String updateDriver(DriverBean bean);
	public ArrayList<InsertDriverPreRtsAndSal> getDriverRoutes(String userId);
	public String updateDriverRoutes(String status,String userId,String routeId);
	public String updateDriverProfile(DriverBean bean);
	public ArrayList<DriverBean> viewDriverProfile(String userId);
	public String updateDriverProfile1(DriverBean bean,InputStream inputStream);
	public String driverChangePassword(String psw1,String psw2,String psw3,String userId);
	public String updateDriverAvailability(String[] driverId, String userId);
	public boolean getEmail(String email);
	public String driverEmailVerification(String email);
	public String updateStatus(String email);
	public String driverJobType(String email); 
	public String InsertOnDemandDriverRoutes(OnDemandDriverRoutes driverRts);
	public ArrayList<OnDemandDriverRoutes> getOnDemandDriverRoutes(String userId);
	public String updateOnDemandDriverRoutes(String email,String status,String id);
	public Set<String> getOnDemandDriverLocation();
	public ArrayList searchHOnDemandDriver(String from,String to,String date,String time,int offset,int noOfRecords);
	public String InsertDriverEndUser(DriverEndUser driverEndUser,UserLogin login);
	public String getIndividualOwnerEmail(String email);
	public List<String> getLoginDetails(String email);
	public int getNoOfRecords();
	public List<String> getDriverByEmail(String email);
	public List<DriverEndUser> getDriverEndUserDetails(String query);
	public List<DriverEndUser> getDriverEndUserById(String apptId);
	public String driverEndUserVerification(String apptId);
	public String insertDriverRating(String apptId,String rate);
	public List<String> getDriverRating(String email);
	public ArrayList<InsertDriverPreRtsAndSal> getDriverSal(String userId);
	public List<DriverEndUser> getDriverEndUser(String date,String email,int offset,int noOfRecords);
	public String updateDriverRequester(String apptId,String status);
	public List<DriverBean> getDriverName(String email);
	public List<DriverEndUser> showDriverEndUserToAllDsb(String date,String email,int offset,int noOfRecords);
	public DriverBean getDriverDetailsById(String driverId);
	public String insertMultiDriverRequest(DriverEndUser driverEndUser, UserLogin login, List<String> driverList);
	public String insertOndemandAmount(String expCharges,String waitingCharges,String email);
	public List<OnDemandDriverRoutes> getOnDemandAmount(String email);
	public String UpdateOnDemandAmount(String expCharges,String waitingCharges,String email);
	public String updateDriverJobType(String jobType,String email);
	public String getDriverRequesterNotification(String email);
	public String updateRequesterNotification(String email);
	public String insertDriverTripId(String email,String apptId);
	public Set<String> getDriverTripId(String email);
	public List<DriverEndUser> getDriverReports(String date,String tripId,String email,int offset,int noOfRecords);
	public String insertDriverFeedBack(String apptId,String tripId,String noOfHours,String waitingHours,String email);
	public List<DriverFeedBack> getDriverBill(String apptId,String tripId);
	public String getDriverBillId(String apptId,String tripId,String email);
	public List<DriverEndUser> getDriverEndUserReports(String date,String tripId,String userMail,int offset,int noOfRecords);
	public Set<String> getEndUserTripId(String email);
	public List<DriverEndUser> getDriverEndUserDetailsWithPage(String query);
}
